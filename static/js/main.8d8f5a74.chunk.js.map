{"version":3,"sources":["Turbine.js","App.js","serviceWorker.js","index.js"],"names":["THREE","require","TrackballControls","_","Turbine","colors","normal","tank","shaft","disk","hub","blade","baffle","hover","_this2","this","glRenderer","WebGLRenderer","canvas","refs","painter","alpha","antialias","animate","onAnimate","scene","Scene","camera","PerspectiveCamera","position","set","props","tankDiameter","add","light","PointLight","controls","rotateSpeed","zoomSpeed","panSpeed","noZoom","noPan","staticMoving","dynamicDampingFactor","keys","addEventListener","copy","startAutoRotation","raycaster","Raycaster","normalVector","Vector2","window","event","x","clientX","width","y","clientY","height","setFromCamera","intersects","intersectObjects","children","excludeTankFromIntersects","checkFirstObject","material","color","onHoverObject","blades","forEach","index","baffles","createTank","createShaft","createDisk","createHub","changeBladeCount","bladeCount","changeBaffleCount","baffleCount","kernelAngle","stopAutoRotation","dispose","nextProps","setSize","aspect","updateProjectionMatrix","kernelAutoRotation","isEqual","updateTank","updateShaft","updateDisk","updateHub","updateBlades","updateBaffles","_this3","timerId","setInterval","clearInterval","update","render","_ref","tankHeight","CylinderGeometry","geometry","createTankGeometry","MeshLambertMaterial","opacity","transparent","side","DoubleSide","Mesh","shaftRadius","_ref2","createShaftGeometry","MeshPhongMaterial","diskRadius","_ref3","diskHeight","createDiskGeometry","hubRadius","_ref4","hubHeight","createHubGeometry","newValue","oldValue","i","remove","pop","BoxGeometry","bladeWidth","bladeHeight","bladeOuterRadius","bladeInnerRadius","mesh","push","_ref5","distance","yAxis","Vector3","offset","length","angle","Math","PI","applyAxisAngle","rotation","baffleInnerRadius","_ref6","baffleOuterRadius","baffleWidth","createBaffleGeometry","_this4","onlyTank","intersect","object","uuid","filter","needle","haystack","react_default","a","createElement","ref","Component","Content","Layout","Header","Sider","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","canvasWidth","canvasHeight","unit","hoverObject","setState","innerWidth","innerHeight","handleResize","removeEventListener","field","value","defineProperty","target","checked","name","className","es","style","overflowY","theme","mode","openKeys","SubMenu","key","title","type","isOpen","Item","min","defaultValue","onChange","handleChange","handleAutoRotation","bind","src_Turbine","handleHoverObject","Boolean","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8d8f5a74.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst THREE = require('three');\nvar TrackballControls = require('three-trackballcontrols');\nvar _ = require('lodash');\n\nclass Turbine extends Component {\n  colors = {\n    normal: {\n      tank: 0xcccccc,\n      shaft: 0xdddddd,\n      disk: 0xdddddd,\n      hub: 0xdddddd,\n      blade: 0xdddddd,\n      baffle: 0xdddddd\n    },\n    hover: {\n      tank: 0x0000ff,\n      shaft: 0x00ff00,\n      disk: 0x00ff00,\n      hub: 0x00ff00,\n      blade: 0x00ff00,\n      baffle: 0x00ff00\n    }\n  }\n\n  componentDidMount() {\n    this.glRenderer = new THREE.WebGLRenderer({\n      canvas: this.refs.painter,\n      alpha: true,\n      antialias: true\n    });\n    this.glRenderer.animate(() => this.onAnimate());\n\n    this.scene = new THREE.Scene();\n\n    this.camera = new THREE.PerspectiveCamera(45, 1, 0.1, 1000);\n    this.camera.position.set(0, 0, this.props.tankDiameter * 4 / 3);\n    this.scene.add(this.camera);\n\n    this.light = new THREE.PointLight(0xffffff, 0.3);\n    this.light.position.set(0, 0, this.props.tankDiameter * 4 / 3);\n    this.scene.add(this.light);\n\n    this.controls = new TrackballControls(this.camera, this.refs.painter);\n\n    this.controls.rotateSpeed = 1.0;\n    this.controls.zoomSpeed = 1.2;\n    this.controls.panSpeed = 0.8;\n\n    this.controls.noZoom = false;\n    this.controls.noPan = false;\n\n    this.controls.staticMoving = true;\n    this.controls.dynamicDampingFactor = 0.3;\n\n    this.controls.keys = [ 65, 83, 68 ];\n\n    this.controls.addEventListener('change', () => {\n      this.light.position.copy(this.camera.position);\n    });\n    this.startAutoRotation();\n\n    this.raycaster = new THREE.Raycaster();\n    this.normalVector = new THREE.Vector2();\n    window.addEventListener('mousemove', event => {\n      // calculate mouse position in normalized device coordinates\n      // (-1 to +1) for both components\n      this.normalVector.x = ((event.clientX - 250) / this.props.width) * 2 - 1;\n      this.normalVector.y = -((event.clientY - 64) / this.props.height) * 2 + 1;\n\n      // update the picking ray with the camera and mouse position\n      this.raycaster.setFromCamera(this.normalVector, this.camera);\n\n      // calculate objects intersecting the picking ray\n      var intersects = this.raycaster.intersectObjects(this.scene.children, true);\n      intersects = this.excludeTankFromIntersects(intersects);\n      if (this.checkFirstObject(this.tank, intersects)) {\n        this.tank.material.color.set(this.colors.hover.tank);\n        this.props.onHoverObject('tank');\n      } else {\n        this.tank.material.color.set(this.colors.normal.tank);\n      }\n      if (this.checkFirstObject(this.shaft, intersects)) {\n        this.shaft.material.color.set(this.colors.hover.shaft);\n        this.props.onHoverObject('shaft');\n      } else {\n        this.shaft.material.color.set(this.colors.normal.shaft);\n      }\n      if (this.checkFirstObject(this.disk, intersects)) {\n        this.disk.material.color.set(this.colors.hover.disk);\n        this.props.onHoverObject('disk');\n      } else {\n        this.disk.material.color.set(this.colors.normal.disk);\n      }\n      if (this.checkFirstObject(this.hub, intersects)) {\n        this.hub.material.color.set(this.colors.hover.hub);\n        this.props.onHoverObject('hub');\n      } else {\n        this.hub.material.color.set(this.colors.normal.hub);\n      }\n      if (this.checkFirstObject(this.hub, intersects)) {\n        this.hub.material.color.set(this.colors.hover.hub);\n        this.props.onHoverObject('hub');\n      } else {\n        this.hub.material.color.set(this.colors.normal.hub);\n      }\n      this.blades.forEach((blade, index) => {\n        if (this.checkFirstObject(blade, intersects)) {\n          this.blades[index].material.color.set(this.colors.hover.blade);\n          this.props.onHoverObject('blade');\n        } else {\n          this.blades[index].material.color.set(this.colors.normal.blade);\n        }\n      });\n      this.baffles.forEach((baffle, index) => {\n        if (this.checkFirstObject(baffle, intersects)) {\n          this.baffles[index].material.color.set(this.colors.hover.baffle);\n          this.props.onHoverObject('baffle');\n        } else {\n          this.baffles[index].material.color.set(this.colors.normal.baffle);\n        }\n      });\n    });\n\n    this.createTank();\n    this.createShaft();\n    this.createDisk();\n    this.createHub();\n\n    this.blades = [];\n    this.changeBladeCount(this.props.bladeCount, 0);\n    this.baffles = [];\n    this.changeBaffleCount(this.props.baffleCount, 0);\n\n    this.kernelAngle = 0;\n  }\n\n  componentWillUnmount() {\n    this.stopAutoRotation();\n    this.controls.dispose();\n    delete this.controls;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.width !== this.props.width || nextProps.height !== this.props.height) {\n      this.glRenderer.setSize(nextProps.width, nextProps.height);\n      this.camera.aspect = nextProps.width / nextProps.height;\n      this.camera.updateProjectionMatrix();\n    }\n\n    if (nextProps.kernelAutoRotation && !this.props.kernelAutoRotation) {\n      this.startAutoRotation();\n    } else if (!nextProps.kernelAutoRotation && this.props.kernelAutoRotation) {\n      this.stopAutoRotation();\n    }\n\n    if (nextProps.bladeCount !== this.props.bladeCount) {\n      this.changeBladeCount(nextProps.bladeCount, this.props.bladeCount);\n    }\n    if (nextProps.baffleCount !== this.props.baffleCount) {\n      this.changeBaffleCount(nextProps.baffleCount, this.props.baffleCount);\n    }\n\n    if (!_.isEqual(nextProps, this.props)) {\n      this.updateTank(nextProps);\n      this.updateShaft(nextProps);\n      this.updateDisk(nextProps);\n      this.updateHub(nextProps);\n      this.updateBlades(nextProps);\n      this.updateBaffles(nextProps);\n    }\n  }\n\n  startAutoRotation() {\n    this.timerId = window.setInterval(() => {\n      this.kernelAngle = (this.kernelAngle + 4) % 360;\n      this.updateBlades(this.props);\n    }, 60);\n  }\n\n  stopAutoRotation() {\n    if (this.timerId) {\n      window.clearInterval(this.timerId);\n    }\n  }\n\n  onAnimate() {\n    // we will get this callback every frame\n\n    // pretend cubeRotation is immutable.\n    // this helps with updates and pure rendering.\n    // React will be sure that the rotation has now updated.\n    // this.setState({\n    //   cubeRotation: new THREE.Euler(\n    //     this.props.cubeRotation.x + 0.1,\n    //     this.props.cubeRotation.y + 0.1,\n    //     0\n    //   )\n    // });\n    this.controls.update();\n\n    this.glRenderer.render(this.scene, this.camera);\n  }\n\n  createTankGeometry({ tankDiameter, tankHeight }) {\n    return new THREE.CylinderGeometry(tankDiameter / 2, tankDiameter / 2, tankHeight, 30);\n  }\n\n  createTank() {\n    var geometry = this.createTankGeometry(this.props);\n    var material = new THREE.MeshLambertMaterial({\n      color: 0xcccccc,\n      opacity: 0.2,\n      transparent: true,\n      side: THREE.DoubleSide\n    });\n    this.tank = new THREE.Mesh(geometry, material);\n    this.scene.add(this.tank);\n  }\n\n  updateTank(props) {\n    delete this.tank.geometry;\n    this.tank.geometry = this.createTankGeometry(props);\n  }\n\n  createShaftGeometry({ shaftRadius, tankHeight }) {\n    return new THREE.CylinderGeometry(shaftRadius, shaftRadius, tankHeight, 30);\n  }\n\n  createShaft() {\n    var geometry = this.createShaftGeometry(this.props);\n    var material = new THREE.MeshPhongMaterial({\n      color: 0xdddddd\n    });\n    this.shaft = new THREE.Mesh(geometry, material);\n    this.scene.add(this.shaft);\n  }\n\n  updateShaft(props) {\n    delete this.shaft.geometry;\n    this.shaft.geometry = this.createShaftGeometry(props);\n  }\n\n  createDiskGeometry({ diskRadius, diskHeight }) {\n    return new THREE.CylinderGeometry(diskRadius, diskRadius, diskHeight, 30);\n  }\n\n  createDisk() {\n    var geometry = this.createDiskGeometry(this.props);\n    var material = new THREE.MeshPhongMaterial({\n      color: 0xdddddd\n    });\n    this.disk = new THREE.Mesh(geometry, material);\n    this.disk.position.set(0, -(this.props.tankHeight / 6), 0);\n    this.scene.add(this.disk);\n  }\n\n  updateDisk(props) {\n    delete this.disk.geometry;\n    this.disk.geometry = this.createDiskGeometry(props);\n    this.disk.position.set(0, -(props.tankHeight / 6), 0);\n  }\n\n  createHubGeometry({ hubRadius, hubHeight }) {\n    return new THREE.CylinderGeometry(hubRadius, hubRadius, hubHeight, 30);\n  }\n\n  createHub() {\n    var geometry = this.createHubGeometry(this.props);\n    var material = new THREE.MeshPhongMaterial({\n      color: 0xdddddd\n    });\n    this.hub = new THREE.Mesh(geometry, material);\n    this.hub.position.set(0, -(this.props.tankHeight / 6), 0);\n    this.scene.add(this.hub);\n  }\n\n  updateHub(props) {\n    delete this.hub.geometry;\n    this.hub.geometry = this.createHubGeometry(props);\n    this.hub.position.set(0, -(props.tankHeight / 6), 0);\n  }\n\n  changeBladeCount(newValue: number, oldValue: number) {\n    var i;\n    if (newValue < oldValue) {\n      for (i = oldValue - 1; i >= newValue; i--) {\n        this.scene.remove(this.blades[i]);\n        this.blades.pop();\n        delete this.blades[i];\n      }\n    } else if (newValue > oldValue) {\n      for (i = oldValue; i < newValue; i++) {\n        var blade = new THREE.BoxGeometry(this.props.bladeWidth, this.props.bladeHeight, this.props.bladeOuterRadius - this.props.bladeInnerRadius);\n        var material = new THREE.MeshPhongMaterial({ color: 0xeeeeee });\n        var mesh = new THREE.Mesh(blade, material);\n        this.blades.push(mesh);\n        this.scene.add(mesh);\n      }\n    }\n  }\n\n  updateBlades({ bladeInnerRadius, bladeOuterRadius, tankHeight }) {\n    var distance = (bladeInnerRadius + bladeOuterRadius) / 2;\n    var yAxis = new THREE.Vector3(0, 1, 0);\n    var offset = new THREE.Vector3(0, -(tankHeight / 6), 0);\n    for (var i = 0; i < this.blades.length; i++) {\n      var angle = (360 * i / this.blades.length + this.kernelAngle) % 360;\n      angle = 2 * Math.PI * angle / 360;\n      this.blades[i].position.set(0, 0, distance);\n      this.blades[i].position.applyAxisAngle(yAxis, angle);\n      this.blades[i].position.add(offset);\n      this.blades[i].rotation.set(0, angle, 0);\n    }\n  }\n\n  createBaffleGeometry({ baffleInnerRadius, baffleOuterRadius, baffleWidth, tankHeight }) {\n    return new THREE.BoxGeometry(baffleWidth, tankHeight, baffleOuterRadius - baffleInnerRadius);\n  }\n\n  changeBaffleCount(newValue: number, oldValue: number) {\n    var i;\n    if (newValue < oldValue) {\n      for (i = oldValue - 1; i >= newValue; i--) {\n        this.scene.remove(this.baffles[i]);\n        this.baffles.pop();\n        delete this.baffles[i];\n      }\n    } else if (newValue > oldValue) {\n      for (i = oldValue; i < newValue; i++) {\n        var baffle = this.createBaffleGeometry(this.props);\n        var material = new THREE.MeshPhongMaterial({ color: 0xeeeeee });\n        var mesh = new THREE.Mesh(baffle, material);\n        this.baffles.push(mesh);\n        this.scene.add(mesh);\n      }\n    }\n  }\n\n  updateBaffles(props) {\n    const { baffleInnerRadius, baffleOuterRadius, tankHeight } = props;\n    var distance = (baffleInnerRadius + baffleOuterRadius) / 2;\n    var yAxis = new THREE.Vector3(0, 1, 0);\n    for (var i = 0; i < this.baffles.length; i++) {\n      delete this.baffles[i].geometry;\n      this.baffles[i].geometry = this.createBaffleGeometry(props);\n      var angle = 2 * Math.PI * i / this.baffles.length;\n      this.baffles[i].position.set(0, 0, distance);\n      this.baffles[i].position.applyAxisAngle(yAxis, angle);\n      this.baffles[i].rotation.set(0, angle, 0);\n    }\n  }\n\n  excludeTankFromIntersects(intersects: Array) {\n    var onlyTank = true;\n    intersects.forEach(intersect => {\n      if (intersect.object.uuid !== this.tank.uuid) {\n        onlyTank = false;\n        return false;\n      }\n    }, this);\n    if (onlyTank) {\n      return intersects;\n    }\n    return intersects.filter((intersect, index) => {\n      return intersect.object.uuid !== this.tank.uuid;\n    }, this);\n  }\n\n  checkFirstObject(needle: THREE.Object3D, haystack: Array) {\n    if (haystack.length > 0) {\n      return needle.uuid === haystack[0].object.uuid;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    return (\n      <canvas ref=\"painter\" width={this.props.width} height={this.props.height}></canvas>\n    );\n  }\n}\n\nTurbine.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  tankDiameter: PropTypes.number.isRequired,\n  tankHeight: PropTypes.number.isRequired,\n  shaftRadius: PropTypes.number.isRequired,\n  kernelAutoRotation: PropTypes.bool,\n  diskRadius: PropTypes.number.isRequired,\n  diskHeight: PropTypes.number.isRequired,\n  hubRadius: PropTypes.number.isRequired,\n  hubHeight: PropTypes.number.isRequired,\n  bladeCount: PropTypes.number.isRequired,\n  bladeInnerRadius: PropTypes.number.isRequired,\n  bladeOuterRadius: PropTypes.number.isRequired,\n  bladeWidth: PropTypes.number.isRequired,\n  bladeHeight: PropTypes.number.isRequired,\n  baffleCount: PropTypes.number.isRequired,\n  baffleInnerRadius: PropTypes.number.isRequired,\n  baffleOuterRadius: PropTypes.number.isRequired,\n  baffleWidth: PropTypes.number.isRequired,\n  onHoverObject: PropTypes.func\n};\n\nexport default Turbine;\n","import React, { Component } from 'react';\nimport { Checkbox, Icon, InputNumber, Layout, Menu } from 'antd';\nimport Turbine from './Turbine';\n\nimport 'antd/dist/antd.css';\nimport './App.css';\n\nconst { Content, Header, Sider } = Layout;\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    const unit = 300;\n    this.state = {\n      canvasWidth: 50,\n      canvasHeight: 50,\n      tankDiameter: unit,\n      tankHeight: unit,\n      shaftRadius: unit * 2 / 75,\n      kernelAutoRotation: true,\n      diskRadius: unit / 8,\n      diskHeight: unit / 75,\n      hubRadius: unit * 4 / 75,\n      hubHeight: unit / 15,\n      bladeCount: 6,\n      bladeInnerRadius: unit / 12,\n      bladeOuterRadius: unit / 6,\n      bladeWidth: unit / 75,\n      bladeHeight: unit / 15,\n      baffleCount: 4,\n      baffleInnerRadius: unit * 2 / 5,\n      baffleOuterRadius: unit / 2,\n      baffleWidth: unit / 75,\n      hoverObject: ''\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      canvasWidth: window.innerWidth - 250,\n      canvasHeight: window.innerHeight - 64\n    });\n    this.handleResize = () => {\n      this.setState({\n        canvasWidth: window.innerWidth - 250,\n        canvasHeight: window.innerHeight - 64\n      });\n    }\n    window.addEventListener('resize', this.handleResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  handleChange(field, value) {\n    this.setState({ [field]: value });\n  }\n\n  handleAutoRotation(event) {\n    this.setState({ kernelAutoRotation: event.target.checked });\n  }\n\n  handleHoverObject(name) {\n    this.setState({ hoverObject: name });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Layout style={{ height: '100%' }}>\n          <Sider width={250} style={{ overflowY: 'auto' }}>\n            <div className=\"logo\"></div>\n            <Menu theme=\"dark\" mode=\"inline\" openKeys={[this.state.hoverObject]}>\n              <Menu.SubMenu key=\"tank\" title={<span><Icon type=\"mail\" /><span>Tank</span></span>} isOpen={this.state.hoverObject === 'tank'}>\n                <Menu.Item key=\"menuitem1\">\n                  <span>Diameter</span>\n                  <InputNumber min={100} defaultValue={this.state.tankDiameter} onChange={(value) => this.handleChange('tankDiameter', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem2\">\n                  <span>Height</span>\n                  <InputNumber min={100} defaultValue={this.state.tankHeight} onChange={(value) => this.handleChange('tankHeight', value)} />\n                </Menu.Item>\n              </Menu.SubMenu>\n              <Menu.SubMenu key=\"shaft\" title={<span><Icon type=\"mail\" /><span>Shaft</span></span>}>\n                <Menu.Item key=\"menuitem3\">\n                  <span>Radius</span>\n                  <InputNumber min={1} defaultValue={this.state.shaftRadius} onChange={(value) => this.handleChange('shaftRadius', value)} />\n                </Menu.Item>\n              </Menu.SubMenu>\n              <Menu.SubMenu key=\"disk\" title={<span><Icon type=\"mail\" /><span>Disk</span></span>}>\n                <Menu.Item key=\"menuitem4\">\n                  <span>Radius</span>\n                  <InputNumber min={1} defaultValue={this.state.diskRadius} onChange={(value) => this.handleChange('diskRadius', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem5\">\n                  <span>Height</span>\n                  <InputNumber min={1} defaultValue={this.state.diskHeight} onChange={(value) => this.handleChange('diskHeight', value)} />\n                </Menu.Item>\n              </Menu.SubMenu>\n              <Menu.SubMenu key=\"hub\" title={<span><Icon type=\"mail\" /><span>Hub</span></span>}>\n                <Menu.Item key=\"menuitem6\">\n                  <span>Radius</span>\n                  <InputNumber min={1} defaultValue={this.state.hubRadius} onChange={(value) => this.handleChange('hubRadius', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem7\">\n                  <span>Height</span>\n                  <InputNumber min={1} defaultValue={this.state.hubHeight} onChange={(value) => this.handleChange('hubHeight', value)} />\n                </Menu.Item>\n              </Menu.SubMenu>\n              <Menu.SubMenu key=\"blade\" title={<span><Icon type=\"mail\" /><span>Blade</span></span>}>\n                <Menu.Item key=\"menuitem8\">\n                  <span>Count</span>\n                  <InputNumber min={1} defaultValue={this.state.bladeCount} onChange={(value) => this.handleChange('bladeCount', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem9\">\n                  <span>Inner Radius</span>\n                  <InputNumber min={1} defaultValue={this.state.bladeInnerRadius} onChange={(value) => this.handleChange('bladeInnerRadius', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem10\">\n                  <span>Outer Radius</span>\n                  <InputNumber min={1} defaultValue={this.state.bladeOuterRadius} onChange={(value) => this.handleChange('bladeOuterRadius', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem11\">\n                  <span>Width</span>\n                  <InputNumber min={1} defaultValue={this.state.bladeWidth} onChange={(value) => this.handleChange('bladeWidth', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem12\">\n                  <span>Height</span>\n                  <InputNumber min={1} defaultValue={this.state.bladeHeight} onChange={(value) => this.handleChange('bladeHeight', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem13\">\n                  <Checkbox checked={this.state.kernelAutoRotation} onChange={this.handleAutoRotation.bind(this)}>Auto Rotation</Checkbox>\n                </Menu.Item>\n              </Menu.SubMenu>\n              <Menu.SubMenu key=\"baffle\" title={<span><Icon type=\"mail\" /><span>Baffle</span></span>}>\n                <Menu.Item key=\"menuitem14\">\n                  <span>Count</span>\n                  <InputNumber min={1} defaultValue={this.state.baffleCount} onChange={(value) => this.handleChange('baffleCount', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem15\">\n                  <span>Inner Radius</span>\n                  <InputNumber min={1} defaultValue={this.state.baffleInnerRadius} onChange={(value) => this.handleChange('baffleInnerRadius', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem16\">\n                  <span>Outer Radius</span>\n                  <InputNumber min={1} defaultValue={this.state.baffleOuterRadius} onChange={(value) => this.handleChange('baffleOuterRadius', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem17\">\n                  <span>Width</span>\n                  <InputNumber min={1} defaultValue={this.state.baffleWidth} onChange={(value) => this.handleChange('baffleWidth', value)} />\n                </Menu.Item>\n              </Menu.SubMenu>\n            </Menu>\n          </Sider>\n          <Layout>\n            <Header>\n              <h1>Turbulent Dynamics</h1>\n            </Header>\n            <Content style={{ overflowY: 'hidden' }}>\n              <Turbine\n                width={this.state.canvasWidth}\n                height={this.state.canvasHeight}\n                tankDiameter={this.state.tankDiameter}\n                tankHeight={this.state.tankHeight}\n                shaftRadius={this.state.shaftRadius}\n                kernelAutoRotation={this.state.kernelAutoRotation}\n                diskRadius={this.state.diskRadius}\n                diskHeight={this.state.diskHeight}\n                hubRadius={this.state.hubRadius}\n                hubHeight={this.state.hubHeight}\n                bladeCount={this.state.bladeCount}\n                bladeInnerRadius={this.state.bladeInnerRadius}\n                bladeOuterRadius={this.state.bladeOuterRadius}\n                bladeWidth={this.state.bladeWidth}\n                bladeHeight={this.state.bladeHeight}\n                baffleCount={this.state.baffleCount}\n                baffleInnerRadius={this.state.baffleInnerRadius}\n                baffleOuterRadius={this.state.baffleOuterRadius}\n                baffleWidth={this.state.baffleWidth}\n                onHoverObject={name => this.handleHoverObject(name)}\n              />\n            </Content>\n          </Layout>\n        </Layout>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}